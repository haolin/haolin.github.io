//普通格子放的Normal 应为普通的格子 是有层的 而且有精灵

//======================================================================================================================
cc.NormalObj = cc.INodeObject.extend({

    //------------------------------------------------------------------------------------------------------------------
    ctor: function(gridLayerIndx, renderZOder)
    {
        this._super();

        //一个最远的点燃时间 3000年1月1日
        //this.m_FireInvalid = new Date(3000, 0, 1, 0, 0, 0, 0);
        this.m_FireTime = null;

        //
        this.m_GridLayerIndx = gridLayerIndx || 0;
        this.m_RenderZOder = renderZOder || 0;
    },

    //------------------------------------------------------------------------------------------------------------------
    description: function()
    {
        return "NormalObj";
    },

    //------------------------------------------------------------------------------------------------------------------
    toString: function()
    {
        var parent = this.getParentNode();
        if (parent)
        {
            var gridPos = parent.getGridPos();
            return this.description() + "(" + gridPos.x + ", " + gridPos.y + ") ";
        }

        return this.description();
    },

    //------------------------------------------------------------------------------------------------------------------
    release: function()
    {
        return this;
    },

    //------------------------------------------------------------------------------------------------------------------
    //拿 位于格子的第几层
    getGridLayerIndx: function()
    {
        return this.m_GridLayerIndx;
    },

    //------------------------------------------------------------------------------------------------------------------
    //拿Z
    getZOrder: function()
    {
        return this.m_RenderZOder;
    },

    //------------------------------------------------------------------------------------------------------------------
    //拿精灵
    getSprite: function()
    {
        return null;
    },

    //------------------------------------------------------------------------------------------------------------------
    //创建精灵
    createSprite: function()
    {
        return null;
    },

    //------------------------------------------------------------------------------------------------------------------
    //更新位置
    updateNodePosition: function()
    {
        var parent = this.getParentNode();
        if (parent)
        {
            var pos = parent.getPosition();
            this.setPosition(pos);

            var sprite = this.getSprite();
            if (sprite)
            {
                sprite.setPosition(pos);
            }
        }

        return this;
    },

    //------------------------------------------------------------------------------------------------------------------
    //添加到渲染
    renderNode: function()
    {
        return this;
    },

    //------------------------------------------------------------------------------------------------------------------
    //销毁
    destroy: function(/*desSrc, gameLevel, visitor*/)
    {
        return this;
    },

    //------------------------------------------------------------------------------------------------------------------
    //点燃
    toFire: function()
    {
        this.m_FireTime = _LocalTime()/*true*/;
        return this;
    },

    //------------------------------------------------------------------------------------------------------------------
    //点燃?
    isFire: function()
    {
        return this.m_FireTime;
    },

    //------------------------------------------------------------------------------------------------------------------
    getFireTime: function()
    {
        var ever = new Date(3000, 0, 1, 0, 0, 0, 0).getTime();
        return this.isFire() ? this.m_FireTime : ever;
    },

    //------------------------------------------------------------------------------------------------------------------
    //被通知销毁
    beNotifiedDestroy: function()
    {
        return this;
    },

    //------------------------------------------------------------------------------------------------------------------
    //和别人交换
    touchSwap: function()
    {
        return this;
    },

    //------------------------------------------------------------------------------------------------------------------
    //拿消除规则
    getDestroyRule: function()
    {
        return null;
    },

    //------------------------------------------------------------------------------------------------------------------
    //是否可手动移动
    canTouch: function()
    {
        return false;
    },

    //------------------------------------------------------------------------------------------------------------------
    leaveFromFactory: function()
    {
        return this;
    }
});

cc.NormalObj.create = function()
{
    return new cc.NormalObj();
};

