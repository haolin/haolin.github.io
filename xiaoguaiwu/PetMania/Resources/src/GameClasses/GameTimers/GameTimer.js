
//======================================================================================================================
var GameTimer = cc.Class.extend({

    //------------------------------------------------------------------------------------------------------------------
    ctor: function()
    {
        cc.log(this + " ctor");
    },

    //------------------------------------------------------------------------------------------------------------------
    description: function()
    {
        return "GameTimer";
    },

    //------------------------------------------------------------------------------------------------------------------
    toString: function()
    {
        return this.description();
    },

    //------------------------------------------------------------------------------------------------------------------
    update: function(/*dtTime*/)
    {
        return this;
    },

    //------------------------------------------------------------------------------------------------------------------
    reset: function()
    {
        return this;
    }

    //------------------------------------------------------------------------------------------------------------------
});

//======================================================================================================================
var NodeSelfTimer = GameTimer.extend({

    //------------------------------------------------------------------------------------------------------------------
    ctor: function(maxTime)
    {
        this._super();

        //
        this._curTime = 0;
        this._maxTime = maxTime;
    },

    //------------------------------------------------------------------------------------------------------------------
    description: function()
    {
        return "NodeSelfTimer";
    },

    //------------------------------------------------------------------------------------------------------------------
    _updateNodeSelf: function(time)
    {
        if (!cc.NodeSelf.getInstance().isLogin())
        {
            return this;
        }

        //
        this._curTime += time;
        if (this._curTime > this._maxTime)
        {
            this._curTime = 0;

            //
            cc.NodeSelf.getInstance().heartbeat(
                function(result)
                {

                }
            );

            //上传数据
            if (cc.DataMng.getInstance().getDirty().isDirty())
            {
                cc.log("到达上传数据时间点 dt = " + this._maxTime);
                //cc.NodeHelper.getInstance().uploadOthers();
                _TimeToUpload = true;
            }
        }

        return this;
    },

    //------------------------------------------------------------------------------------------------------------------
    update: function(time)
    {
        this._super(time);

        //更新NodeSelf
        this._updateNodeSelf(time);

        //更新NodeTime
        NodeTime.getInstance().update(time);

        return this;
    },

    //------------------------------------------------------------------------------------------------------------------
    reset: function()
    {
        this._super();

        //
        this._curTime = 0;
        return this;
    }

    //------------------------------------------------------------------------------------------------------------------
});

NodeSelfTimer.create = function()
{
    return new NodeSelfTimer(3 * 60);
};

//======================================================================================================================
var DataMngNotifyTimer = GameTimer.extend({

    //------------------------------------------------------------------------------------------------------------------
    ctor: function(maxTime)
    {
        this._super();

        //
        this._curTime = 0;
        this._maxTime = maxTime;
    },

    //------------------------------------------------------------------------------------------------------------------
    toString: function()
    {
        return "DataMngNotifyTimer";
    },

    //------------------------------------------------------------------------------------------------------------------
    update: function(time)
    {
        this._super(time);

        this._curTime += time;
        if (this._curTime >= this._maxTime)
        {
            this._curTime = 0;
            cc.DataMng.getInstance().updateGUIObservers();
        }

        return this;
    }

    //------------------------------------------------------------------------------------------------------------------
});

DataMngNotifyTimer.create = function()
{
    return new DataMngNotifyTimer(1);
};

//======================================================================================================================
var BITimer = GameTimer.extend({

    //------------------------------------------------------------------------------------------------------------------
    ctor: function()
    {
        this._super();

        //
        this._curTime = 0;
    },

    //------------------------------------------------------------------------------------------------------------------
    toString: function()
    {
        return "BITimer";
    },

    //------------------------------------------------------------------------------------------------------------------
    resetTimer: function()
    {
        this._curTime = 0;
    },

    //------------------------------------------------------------------------------------------------------------------
    getCurTime: function()
    {
        return this._curTime;
    },

    //------------------------------------------------------------------------------------------------------------------
    update: function(time)
    {
        this._super(time);

        this._curTime += time;

        //cc.log("++++++++++BITimer :" + this._curTime);

        return this;
    }

    //------------------------------------------------------------------------------------------------------------------
});

BITimer.create = function()
{
    var createTimer = new BITimer();

    //
    BIMng.getInstance().registerBITimer(createTimer);

    return createTimer;
};



